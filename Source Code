#include <ESP8266WiFi.h> //memasukkan library ESP8266WiFi
#include <ESP8266HTTPClient.h> //memasukkan library ESP8266HTTPClient
#include <ArduinoJson.h> //memasukkan library ArduinoJson
#include <SPI.h> //memasukkan library SPI
#include <MFRC522.h> //memasuukan library RFID dengan tipe MFRC522

#define SS_PIN D2 //mendeklarasikan pin D2 di NodeMCU sebagai SS_PIN
#define RST_PIN D1 //mendeklarasikan pin D1 di NodeMCU sebagai PST_PIN

byte i=0; //membuat bariable i dengan nilai awal 0
String seri=""; //membuat variable seri untuk tempat serial number RFID
const char* url = "http://api.sekolahan.id/v1/54/datakartu?nokartu="; //mendeklarasikan ApiKey sekolahan.id dengan nama url
MFRC522 mfrc522(SS_PIN, RST_PIN); //memanggil data MFRC522 dengan sebutan mfrc522

const char* ssid = "ddddd"; //memasukkan username hotspot yang akan digunakan ESP8266
const char* pass = "12345678"; //memasukkan password yang akan digunakan ESP8266
void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200);
  WiFi.begin(ssid,pass); //menyambungkan WiFi dengan ssid dan pass yang sudah dituliskan
 /*membuat perintah jika NodeMCU tidak tersambung ke Hotspot akan menampilkan tulisan "Connecting..."*/
  while(WiFi.status() !=WL_CONNECTED){
    delay(1000);
    Serial.println("Connecting...");
  }
  Serial.print("Tap Kartu Anda");
}

void loop() {
  // put your main code here, to run repeatedly:
    MFRC522::MIFARE_Key key;
    /* membuat suatu kondisi jika RFID tidak membaca kartu baru dan tidakk membaca serial cardnya akan mengulang kondisi tersebut*/
    if(!mfrc522.PICC_IsNewCardPresent() || !mfrc522.PICC_ReadCardSerial()){
      return;
    }
    /* untuk membuat serial number RFID dan menkonversikannya ke bilangan HexaDesimal */
    for(i=0; i<mfrc522.uid.size; i++){
      seri = (mfrc522.uid.uidByte[i] <0x10 ? "0" : "");
      seri = (mfrc522.uid.uidByte[i], HEX);
    }
    /* kodingan untuk mendapatkan data dari database dan ditampilkan di serial monitor jika berhasil maka projek selesai*/
    if(WiFi.status() == WL_CONNECTED){
      HTTPClient http;
      http.begin(url + seri);
      int httpCode = http.GET();
      if(httpCode = 0){
      const size_t bufferSize = JSON_OBJECT_SIZE(2) + JSON_OBJECT_SIZE(3) + JSON_OBJECT_SIZE(5) + JSON_OBJECT_SIZE(8) + 370;
      DynamicJsonBuffer jsonBuffer(bufferSize);
      JsonObject & root = jsonBuffer.parseObject(http.getString());
      int id = root["id"];
      const char* nama = root ["nama"];
      const char* status = root ["status"];
      Serial.print("Nama: ");
      Serial.println(nama);
      Serial.print("Status: ");
      Serial.println(status);
      Serial.print(seri);
      seri="";
    }
    http.end();
  }
  seri = "";
  mfrc522.PICC_HaltA();
  mfrc522.PCD_StopCrypto1();
  delay(60000);
}
